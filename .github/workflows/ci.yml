# SPDX-FileCopyrightText: 2025 Knitli Inc.
# SPDX-FileContributor: Adam Poulemanos <adam@knit.li>
#
# SPDX-License-Identifier: MIT OR Apache-2.0

name: CI

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache mise tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/mise
          ~/.local/bin/mise
          ~/.local/share/mise/shims
          ~/.cache/uv
          ./.cache/uv
          ~/.local/bin
          ./scripts
          ~/.cache/mise
        key: mise-${{ runner.os }}-${{ hashFiles('mise.toml') }}
        restore-keys: |
          mise-${{ runner.os }}-

    - name: Cache UV dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          ./.cache/uv
        key: uv-${{ runner.os }}-python${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-${{ runner.os }}-python${{ matrix.python-version }}-
          uv-${{ runner.os }}-

    - name: Install mise
      run: |
        if [ ! -f ~/.local/bin/mise ]; then
          curl https://mise.run | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        fi

    - name: Install tools with mise
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mise run setup

    - name: Run quality checks
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mise run check

    - name: Run tests with coverage
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mise run test-cov

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          test-results.xml
          coverage.xml

  lint:
    name: Lint and Format
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache mise tools
      uses: actions/cache@v4
      with:
        path: |
          ~/.local/share/mise
          ~/.local/bin/mise
          ~/.local/share/mise/shims
          ~/.cache/uv
          ./.cache/uv
          ~/.local/bin
          ./scripts
          ~/.cache/mise
        key: mise-lint-${{ runner.os }}-${{ hashFiles('mise.toml') }}
        restore-keys: |
          mise-lint-${{ runner.os }}-
          mise-${{ runner.os }}-

    - name: Cache UV dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          ./.cache/uv
        key: uv-lint-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-lint-${{ runner.os }}-
          uv-${{ runner.os }}-python3.11-

    - name: Install mise
      run: |
        if [ ! -f ~/.local/bin/mise ]; then
          curl https://mise.run | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        fi

    - name: Install tools with mise
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mise run setup

    - name: Check code style and linting
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mise run lint
        mise run format

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Cache UV dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: uv-build-${{ runner.os }}-${{ hashFiles('uv.lock') }}
        restore-keys: |
          uv-build-${{ runner.os }}-

    - name: Install UV and build tools
      run: |
        python -m pip install uv twine

    - name: Build package
      run: |
        uv build

    - name: Check build artifacts
      run: |
        ls -la dist/
        uv run python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
