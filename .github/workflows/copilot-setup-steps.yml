name: "Copilot Setup Steps"

# Automatically run the setup steps when they are changed to allow for easy validation, and
# allow manual testing through the repository's "Actions" tab
on:
  workflow_dispatch:
  push:
    paths:
      - .github/workflows/copilot-setup-steps.yml
  pull_request:
    paths:
      - .github/workflows/copilot-setup-steps.yml

jobs:
  # The job MUST be called `copilot-setup-steps` or it will not be picked up by Copilot.
  copilot-setup-steps:
    runs-on: ubuntu-latest

    # Set the permissions to the lowest permissions possible needed for your steps.
    # Copilot will be given its own token for its operations.
    permissions:
      # If you want to clone the repository as part of your setup steps, for example to install dependencies, you'll need the `contents: read` permission. If you don't clone the repository in your setup steps, Copilot will do this for you automatically after the steps complete.
      contents: read


    # You can define any steps you want, and they will run before the agent starts.
    # If you do not check out your code, Copilot will do this for you.
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Mise
        run: |
          current_dir=$(pwd)
          if [[ $current_dir != *code-weaver-mcp ]]; then
            cd code-weaver-mcp
          fi
          chmod -R +x scripts
          ./scripts/install-mise.sh &&
          cache_files="$(ls -la ~/.cache/mise/)"
          if [[ $cache_files == *mise-2025-* ]]; then
            mise_bin="$(ls ~/.cache/mise/mise-2025-*)"
          else
            mise_bin="$(which mise)"
            mise_bin="${mise_bin:-~/.local/bin/mise}"
          fi
          "$mise_bin" trust -yq &&
          "$mise_bin" setup &&
          eval "$("$mise_bin" activate)"
        env:
          MISE: "${{ vars.mise_bin }}"
